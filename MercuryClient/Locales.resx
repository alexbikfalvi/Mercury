<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Collection" type="System.Byte[], mscorlib">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAERNZXJjdXJ5Q2xpZW50LCBWZXJzaW9uPTEuMC4wLjAsIEN1bHR1
        cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbAUBAAAAKERvdE5ldEFwaS5HbG9iYWxpemF0aW9u
        LkxvY2FsZUNvbGxlY3Rpb24BAAAAB2xvY2FsZXMD+QFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5E
        aWN0aW9uYXJ5YDJbW0RvdE5ldEFwaS5HbG9iYWxpemF0aW9uLkN1bHR1cmVJZCwgTWVyY3VyeUNsaWVu
        dCwgVmVyc2lvbj0xLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGxdLFtE
        b3ROZXRBcGkuR2xvYmFsaXphdGlvbi5Mb2NhbGUsIE1lcmN1cnlDbGllbnQsIFZlcnNpb249MS4wLjAu
        MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1udWxsXV0CAAAACQMAAAAEAwAAAPkBU3lz
        dGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tEb3ROZXRBcGkuR2xvYmFsaXphdGlv
        bi5DdWx0dXJlSWQsIE1lcmN1cnlDbGllbnQsIFZlcnNpb249MS4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1udWxsXSxbRG90TmV0QXBpLkdsb2JhbGl6YXRpb24uTG9jYWxlLCBNZXJj
        dXJ5Q2xpZW50LCBWZXJzaW9uPTEuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
        bnVsbF1dBAAAAAdWZXJzaW9uCENvbXBhcmVyCEhhc2hTaXplDUtleVZhbHVlUGFpcnMAAwADCJ4BU3lz
        dGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuT2JqZWN0RXF1YWxpdHlDb21wYXJlcmAxW1tEb3ROZXRBcGku
        R2xvYmFsaXphdGlvbi5DdWx0dXJlSWQsIE1lcmN1cnlDbGllbnQsIFZlcnNpb249MS4wLjAuMCwgQ3Vs
        dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1udWxsXV0I/QFTeXN0ZW0uQ29sbGVjdGlvbnMuR2Vu
        ZXJpYy5LZXlWYWx1ZVBhaXJgMltbRG90TmV0QXBpLkdsb2JhbGl6YXRpb24uQ3VsdHVyZUlkLCBNZXJj
        dXJ5Q2xpZW50LCBWZXJzaW9uPTEuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
        bnVsbF0sW0RvdE5ldEFwaS5HbG9iYWxpemF0aW9uLkxvY2FsZSwgTWVyY3VyeUNsaWVudCwgVmVyc2lv
        bj0xLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGxdXVtdBwAAAAkEAAAA
        BwAAAAkFAAAABAQAAACeAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLk9iamVjdEVxdWFsaXR5Q29t
        cGFyZXJgMVtbRG90TmV0QXBpLkdsb2JhbGl6YXRpb24uQ3VsdHVyZUlkLCBNZXJjdXJ5Q2xpZW50LCBW
        ZXJzaW9uPTEuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1dAAAAAAcF
        AAAAAAEAAAAHAAAAA/sBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuS2V5VmFsdWVQYWlyYDJbW0Rv
        dE5ldEFwaS5HbG9iYWxpemF0aW9uLkN1bHR1cmVJZCwgTWVyY3VyeUNsaWVudCwgVmVyc2lvbj0xLjAu
        MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGxdLFtEb3ROZXRBcGkuR2xvYmFs
        aXphdGlvbi5Mb2NhbGUsIE1lcmN1cnlDbGllbnQsIFZlcnNpb249MS4wLjAuMCwgQ3VsdHVyZT1uZXV0
        cmFsLCBQdWJsaWNLZXlUb2tlbj1udWxsXV0E+v////sBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMu
        S2V5VmFsdWVQYWlyYDJbW0RvdE5ldEFwaS5HbG9iYWxpemF0aW9uLkN1bHR1cmVJZCwgTWVyY3VyeUNs
        aWVudCwgVmVyc2lvbj0xLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGxd
        LFtEb3ROZXRBcGkuR2xvYmFsaXphdGlvbi5Mb2NhbGUsIE1lcmN1cnlDbGllbnQsIFZlcnNpb249MS4w
        LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1udWxsXV0CAAAAA2tleQV2YWx1ZQQE
        IURvdE5ldEFwaS5HbG9iYWxpemF0aW9uLkN1bHR1cmVJZAIAAAAeRG90TmV0QXBpLkdsb2JhbGl6YXRp
        b24uTG9jYWxlAgAAAAX5////IURvdE5ldEFwaS5HbG9iYWxpemF0aW9uLkN1bHR1cmVJZAMAAAAZPExh
        bmd1YWdlPmtfX0JhY2tpbmdGaWVsZBc8U2NyaXB0PmtfX0JhY2tpbmdGaWVsZBo8VGVycml0b3J5Pmtf
        X0JhY2tpbmdGaWVsZAEBAQIAAAAGCAAAAAJjYQoKCQkAAAAB9v////r///8B9f////n///8GDAAAAAJk
        ZQoKCQ0AAAAB8v////r///8B8f////n///8GEAAAAAJlbgoKCREAAAAB7v////r///8B7f////n///8G
        FAAAAAJlcwoKCRUAAAAB6v////r///8B6f////n///8GGAAAAAJmcgoKCRkAAAAB5v////r///8B5f//
        //n///8GHAAAAAJwdAoKCR0AAAAB4v////r///8B4f////n///8GIAAAAAJybwoKCSEAAAAFCQAAAB5E
        b3ROZXRBcGkuR2xvYmFsaXphdGlvbi5Mb2NhbGUEAAAACWxhbmd1YWdlcwdzY3JpcHRzC3RlcnJpdG9y
        aWVzGDxDdWx0dXJlPmtfX0JhY2tpbmdGaWVsZAQEBAQqRG90TmV0QXBpLkdsb2JhbGl6YXRpb24uTGFu
        Z3VhZ2VDb2xsZWN0aW9uAgAAAChEb3ROZXRBcGkuR2xvYmFsaXphdGlvbi5TY3JpcHRDb2xsZWN0aW9u
        AgAAACtEb3ROZXRBcGkuR2xvYmFsaXphdGlvbi5UZXJyaXRvcnlDb2xsZWN0aW9uAgAAACFEb3ROZXRB
        cGkuR2xvYmFsaXphdGlvbi5DdWx0dXJlSWQCAAAAAgAAAAkiAAAACSMAAAAJJAAAAAHb////+f///wkI
        AAAACgoBDQAAAAkAAAAJJwAAAAkoAAAACSkAAAAB1v////n///8JDAAAAAoKAREAAAAJAAAACSwAAAAJ
        LQAAAAkuAAAAAdH////5////CRAAAAAKCgEVAAAACQAAAAkxAAAACTIAAAAJMwAAAAHM////+f///wkU
        AAAACgoBGQAAAAkAAAAJNgAAAAk3AAAACTgAAAABx/////n///8JGAAAAAoKAR0AAAAJAAAACTsAAAAJ
        PAAAAAk9AAAAAcL////5////CRwAAAAKCgEhAAAACQAAAAlAAAAACUEAAAAJQgAAAAG9////+f///wkg
        AAAACgoFIgAAACpEb3ROZXRBcGkuR2xvYmFsaXphdGlvbi5MYW5ndWFnZUNvbGxlY3Rpb24CAAAACWxh
        bmd1YWdlcxg8Q3VsdHVyZT5rX19CYWNraW5nRmllbGQDBO4BU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVy
        aWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj0yLjAuMC4wLCBD
        dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtEb3ROZXRBcGku
        R2xvYmFsaXphdGlvbi5MYW5ndWFnZSwgTWVyY3VyeUNsaWVudCwgVmVyc2lvbj0xLjAuMC4wLCBDdWx0
        dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGxdXSFEb3ROZXRBcGkuR2xvYmFsaXphdGlvbi5D
        dWx0dXJlSWQCAAAAAgAAAAlFAAAAAbr////5////CQgAAAAKCgUjAAAAKERvdE5ldEFwaS5HbG9iYWxp
        emF0aW9uLlNjcmlwdENvbGxlY3Rpb24CAAAAB3NjcmlwdHMYPEN1bHR1cmU+a19fQmFja2luZ0ZpZWxk
        AwTsAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnlgMltbU3lzdGVtLlN0cmluZywg
        bXNjb3JsaWIsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
        NzdhNWM1NjE5MzRlMDg5XSxbRG90TmV0QXBpLkdsb2JhbGl6YXRpb24uU2NyaXB0LCBNZXJjdXJ5Q2xp
        ZW50LCBWZXJzaW9uPTEuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1d
        IURvdE5ldEFwaS5HbG9iYWxpemF0aW9uLkN1bHR1cmVJZAIAAAACAAAACUgAAAABt/////n///8JCAAA
        AAoKBSQAAAArRG90TmV0QXBpLkdsb2JhbGl6YXRpb24uVGVycml0b3J5Q29sbGVjdGlvbgIAAAALdGVy
        cml0b3JpZXMYPEN1bHR1cmU+a19fQmFja2luZ0ZpZWxkAwTvAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5l
        cmljLkRpY3Rpb25hcnlgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAuMCwg
        Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxbRG90TmV0QXBp
        Lkdsb2JhbGl6YXRpb24uVGVycml0b3J5LCBNZXJjdXJ5Q2xpZW50LCBWZXJzaW9uPTEuMC4wLjAsIEN1
        bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1dIURvdE5ldEFwaS5HbG9iYWxpemF0aW9u
        LkN1bHR1cmVJZAIAAAACAAAACUsAAAABtP////n///8JCAAAAAoKAScAAAAiAAAACU4AAAABsf////n/
        //8JDAAAAAoKASgAAAAjAAAACVEAAAABrv////n///8JDAAAAAoKASkAAAAkAAAACVQAAAABq/////n/
        //8JDAAAAAoKASwAAAAiAAAACVcAAAABqP////n///8JEAAAAAoKAS0AAAAjAAAACVoAAAABpf////n/
        //8JEAAAAAoKAS4AAAAkAAAACV0AAAABov////n///8JEAAAAAoKATEAAAAiAAAACWAAAAABn/////n/
        //8JFAAAAAoKATIAAAAjAAAACWMAAAABnP////n///8JFAAAAAoKATMAAAAkAAAACWYAAAABmf////n/
        //8JFAAAAAoKATYAAAAiAAAACWkAAAABlv////n///8JGAAAAAoKATcAAAAjAAAACWwAAAABk/////n/
        //8JGAAAAAoKATgAAAAkAAAACW8AAAABkP////n///8JGAAAAAoKATsAAAAiAAAACXIAAAABjf////n/
        //8JHAAAAAoKATwAAAAjAAAACXUAAAABiv////n///8JHAAAAAoKAT0AAAAkAAAACXgAAAABh/////n/
        //8JHAAAAAoKAUAAAAAiAAAACXsAAAABhP////n///8JIAAAAAoKAUEAAAAjAAAACX4AAAABgf////n/
        //8JIAAAAAoKAUIAAAAkAAAACYEAAAABfv////n///8JIAAAAAoKBEUAAADuAVN5c3RlbS5Db2xsZWN0
        aW9ucy5HZW5lcmljLkRpY3Rpb25hcnlgMltbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249
        Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XSxb
        RG90TmV0QXBpLkdsb2JhbGl6YXRpb24uTGFuZ3VhZ2UsIE1lcmN1cnlDbGllbnQsIFZlcnNpb249MS4w
        LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1udWxsXV0DAAAAB1ZlcnNpb24IQ29t
        cGFyZXIISGFzaFNpemUAAwAIkgFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5HZW5lcmljRXF1YWxp
        dHlDb21wYXJlcmAxW1tTeXN0ZW0uU3RyaW5nLCBtc2NvcmxpYiwgVmVyc2lvbj0yLjAuMC4wLCBDdWx0
        dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldXQgAAAAACYQAAAAAAAAA
        BEgAAADsAVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnlgMltbU3lzdGVtLlN0cmlu
        ZywgbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
        bj1iNzdhNWM1NjE5MzRlMDg5XSxbRG90TmV0QXBpLkdsb2JhbGl6YXRpb24uU2NyaXB0LCBNZXJjdXJ5
        Q2xpZW50LCBWZXJzaW9uPTEuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVs
        bF1dAwAAAAdWZXJzaW9uCENvbXBhcmVyCEhhc2hTaXplAAMACJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdl
        bmVyaWMuR2VuZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZl
        cnNpb249Mi4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRl
        MDg5XV0IAAAAAAmEAAAAAAAAAARLAAAA7wFTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5EaWN0aW9u
        YXJ5YDJbW1N5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1
        dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV0sW0RvdE5ldEFwaS5HbG9iYWxpemF0
        aW9uLlRlcnJpdG9yeSwgTWVyY3VyeUNsaWVudCwgVmVyc2lvbj0xLjAuMC4wLCBDdWx0dXJlPW5ldXRy
        YWwsIFB1YmxpY0tleVRva2VuPW51bGxdXQMAAAAHVmVyc2lvbghDb21wYXJlcghIYXNoU2l6ZQADAAiS
        AVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkdlbmVyaWNFcXVhbGl0eUNvbXBhcmVyYDFbW1N5c3Rl
        bS5TdHJpbmcsIG1zY29ybGliLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
        S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dCAAAAAAJhAAAAAAAAAABTgAAAEUAAAAAAAAACYQAAAAA
        AAAAAVEAAABIAAAAAAAAAAmEAAAAAAAAAAFUAAAASwAAAAAAAAAJhAAAAAAAAAABVwAAAEUAAAAAAAAA
        CYQAAAAAAAAAAVoAAABIAAAAAAAAAAmEAAAAAAAAAAFdAAAASwAAAAAAAAAJhAAAAAAAAAABYAAAAEUA
        AAAAAAAACYQAAAAAAAAAAWMAAABIAAAAAAAAAAmEAAAAAAAAAAFmAAAASwAAAAAAAAAJhAAAAAAAAAAB
        aQAAAEUAAAAAAAAACYQAAAAAAAAAAWwAAABIAAAAAAAAAAmEAAAAAAAAAAFvAAAASwAAAAAAAAAJhAAA
        AAAAAAABcgAAAEUAAAAAAAAACYQAAAAAAAAAAXUAAABIAAAAAAAAAAmEAAAAAAAAAAF4AAAASwAAAAAA
        AAAJhAAAAAAAAAABewAAAEUAAAAAAAAACYQAAAAAAAAAAX4AAABIAAAAAAAAAAmEAAAAAAAAAAGBAAAA
        SwAAAAAAAAAJhAAAAAAAAAAEhAAAAJIBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2VuZXJpY0Vx
        dWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZywgbXNjb3JsaWIsIFZlcnNpb249Mi4wLjAuMCwg
        Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0AAAAACw==
</value>
  </data>
</root>